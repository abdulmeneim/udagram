version: 2.1
orbs:
  node: circleci/node@5.0.0
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@2.0.1
  browser-tools: circleci/browser-tools@1.2.4
jobs:
  test:
    docker:
      - image: circleci/node:16-browsers
    working_directory: ~/udagram
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 99.0.4844.51
      - browser-tools/install-chromedriver
      - restore_cache:
          key: udagram/udagram-frontend-{{ .Branch }}-{{ checksum "package-lock.json" }}
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm run frontend:install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: udagram/udagram-frontend-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # # Lint the source code
      # - run:
      #     name: Linting
      #     command: npm run lint
      # Test the source code
      - run:
          name: Testing
          command: npm run frontend:unittest -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      #End to End test
      - run:
          name: End to End Test
          command: npm run frontend:e2etest  --protractor-config=e2e/protractor.conf.js
  build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - aws-cli/setup
      - eb/setup
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            npm run backend:build

      - run:
          name: Deploy back-end App
          command: |
            npm run backend:deploy
      - run:
          name: Deploy frontend-App
          command: |
            npm run frontend:deploy
workflows:
  udagram:
    jobs:
      - test:
          filters:
            branches:
              only:
                - main
                - master
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - main
                - master
